% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-add-run.R
\name{plot_add_run}
\alias{plot_add_run}
\title{Low level plotting function to apply color coding to plots based on run variable!}
\usage{
plot_add_run(plot)
}
\arguments{
\item{plot}{ggplot2 object.}
}
\value{
ggplot2 plot.
}
\description{
This function can be used to add colour coding to plotting routines without color specification
e.g. \code{plot_ts()}, \code{plot_calibrate()} or \code{plot_physics()}. The colorcoding is
based on the column run so you need to apply \code{combine_runs} to your data first!
Please note that \code{plot_ts()} and \code{plot_calibrate()} only work if they are created
with non-age based data.
}
\examples{
# We need to create dummy data from an additional simulation first.
dummy <- preprocess$biomass
dummy$atoutput <- dummy$atoutput * 1.5

# Combine the two runs!
dfs <- combine_runs(list(list(preprocess$biomass), list(dummy)), runs = c("setas", "dummy"))

# Plot timeseries and add color coding according to column 'run'.
plot <- plot_line(dfs[[1]])
plot_add_run(plot)
}
\seealso{
Other low-level-plot functions: \code{\link{plot_add_box}},
  \code{\link{plot_add_range}}
}

